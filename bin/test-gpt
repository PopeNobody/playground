#!/usr/bin/perl
# vim: ts=2 sw=2 ft=perl
eval 'exec perl -x -wS $0 ${1+"$@"}'
  if 0;
$|++;
use FindBin qw($Bin);
use Path::Tiny;
open(STDERR,"|cat >&2");
open(STDOUT,">&STDERR");
BEGIN {
  for(map { "$_" } $Bin) {
    s{/s?bin$}{};
    $FindBin::prefix="$_";
  };    
};
BEGIN {
  use lib $FindBin::prefix."/lib";
};
use common::sense;
use autodie;
use Nobody::Util;
use Snatcher;
our(@VERSION) = qw( 0 1 0 );
use Getopt::WonderBra;
use AI::Conv;

@ARGV = getopt("dc:f:e",@ARGV);
my ($delete,$text) = 0;
my ($edit,$file,$conv) = ( 1, "prompt.txt", "test.jwrap" );
sub help {
  say "usage; $0 [ -f \$file ] [ -e ]";
  say "";
  say "   -c \$conv load/store conversation from this file";
  say "       extension should be jwrap or wrapped json";
  say "";
  say "   -f \$file: prompt from file \$file";
  say "";
  say "   -e edit first.  filename is still used, if provided";
  say "      this is a toggle, and defaults to on";
  say "";
  say "   -d unlink exisnting converstation";
};

sub version {
  say "@VERSION";
};

while(($_=shift)ne'--'){
  if( $_ eq '-c') {
    $conv=path(shift);
  } elsif( $_ eq '-f') {
    $file=path(shift);
  } elsif ( $_ eq '-d' ) {
    $delete=1;
  } elsif ( $_ eq '-e' ) {
    $edit=1-$edit;
  } else {
    die "bad arg: $_";
  };
};
if($edit) {
  $file//="prompt.txt";
  system("exec >/dev/tty </dev/tty 2>&1; vi $file");
  die "edit session failed" if $?;
}
$file=path($file);
if(defined($file)){
  $text=$file->slurp;
};
$file = path("test-gpt.jwrap");
if($delete) {
  $file->remove if $file->exists;
};
my $conv = AI::Conv->new($file);
eex( [ $conv, $text ] );
my $res = $conv->transact($text);
ddx($res);
my @res = split(m{\n},$res);
for(@res) {
  print;
};
