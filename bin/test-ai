#!/usr/bin/perl
# vim: ts=2 sw=2 ft=perl
eval 'exec perl -x -wS $0 ${1+"$@"}'
  if 0;
$|++;
use FindBin qw($Bin);
open(STDERR,"|cat >&2");
open(STDOUT,">&STDERR");
BEGIN {
  for(map { "$_" } $Bin) {
    s{/s?bin$}{};
    $FindBin::prefix="$_";
  };    
};
BEGIN {
  use lib $FindBin::prefix."/lib";
};
use common::sense;
use AI::Util;
use AI::UI;
use autodie;
use Snatcher;
our(@VERSION) = qw( 0 1 0 );
use Getopt::WonderBra;
use AI::Conv;
use AI::Config qw(get_api_mod);

die "Session not configured" unless defined(AI::Config::get_api_ua);

@ARGV = getopt("mdc:f:e",@ARGV);
my ($delete,$text,$mock) = 0;
my ($edit,$prompt_file,$conv) = ( 1 );
sub help {
  say "usage; $0 [ -f \$prompt_file ] [ -e ]";
  say "";
  say "   -c \$conv dir: this will be the conv directory";
  say "       the mail file will be called conv.jwrap";
  say "       ( this dir will be used until system is";
  say "         instructed to use a new one, or it disappars )";
  say "";
  say "   -f \$prompt_file: prompt from file \$prompt_file";
  say "      if file is not absolute, will be relative to";
  say "      conversation dir";
  say "";
  say "   -e edit first.  filename is still used, if provided";
  say "      this is a toggle, and defaults to on";
  say "";
  say "   -d unlink exisnting converstation";
};

sub version {
  say "@VERSION";
};
while(($_=shift)ne'--'){
  if( $_ eq '-c') {
    $conv=path(shift);
  } elsif( $_ eq '-f') {
    $prompt_file=path(shift);
  } elsif ( $_ eq '-d' ) {
    $delete=1;
  } elsif ( $_ eq '-e' ) {
    $edit=1-$edit;
  } elsif ( $_ eq '-m' ) {
    $mock=1;
    $edit=1;
  } else {
    die "bad arg: $_";
  };
};
ddx([$conv]);
$conv=>set_conv($conv);
ddx([$conv]);

my $res;
do {
  $res = transact();
  if($res->{type} eq "text/plain"){
    may_edit($conv);
  } else {
    run_script($conv);
  }
} while $res->{type} ne "text/plain";

